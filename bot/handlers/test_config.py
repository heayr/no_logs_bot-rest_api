# bot/handlers/test_config.py
import logging
from core.config import settings
from aiogram import Router, types
from bot.services.user_config_service import create_test_user

test_config_handler = Router()


@test_config_handler.message(lambda m: m.text == "üéÅ –ü–æ–ª—É—á–∏—Ç—å —Ç–µ—Å—Ç")
async def handle_test_request(message: types.Message):
    try:
        config_link, expires_days, error = await create_test_user(
            message.from_user.id,
            minutes=settings.TEST_MINUTES,
            return_days=True
        )

        if error:
            await message.answer(error)
        elif config_link and expires_days is not None:
            response = (
                f"üîí –í–∞—à —Ç–µ—Å—Ç–æ–≤—ã–π VPN-–∫–æ–Ω—Ñ–∏–≥:\n\n"
                f"{config_link}\n\n"
                f"‚è≥ –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: {expires_days} –¥–Ω–µ–π\n\n"
                f"–î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ª—é–±–æ–π –∫–ª–∏–µ–Ω—Ç V2RayN."
            )
            if str(message.from_user.id) in map(str, settings.ADMIN_IDS):  # –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ
                response += "\n\n‚öôÔ∏è –í—ã –ø–æ–ª—É—á–∏–ª–∏ –∫–æ–Ω—Ñ–∏–≥ –≤ –æ–±—Ö–æ–¥ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π (—Ä–µ–∂–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)"
            await message.answer(response)
        else:
            await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ handle_test_request: {str(e)}", exc_info=True)
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
